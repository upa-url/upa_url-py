name: Wheels

on:
  push:
    branches: [ main, 'v[0-9]+.x' ]
    paths-ignore: [ '**.md' ]
  pull_request:
    paths-ignore: [ '**.md' ]
  release:
    types: [published]
  workflow_dispatch:

jobs:
  build_sdist:
    name: Build SDist
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5

    - name: Build SDist
      run: pipx run build --sdist

    - name: Check metadata
      run: pipx run twine check dist/*

    - uses: actions/upload-artifact@v4
      with:
        name: dist-sdist
        path: dist/*.tar.gz

  build_wheels:
    name: Wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-13, macos-14, windows-latest]

    steps:
    - uses: actions/checkout@v5

    - name: Build wheels
      uses: pypa/cibuildwheel@v3.2.0

    - uses: actions/upload-artifact@v4
      with:
        name: dist-${{ matrix.os }}-${{ strategy.job-index }}
        path: wheelhouse/*.whl

  upload_all:
    name: Upload if release
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'

    steps:
    - uses: actions/download-artifact@v5
      with:
        pattern: dist-*
        path: dist
        merge-multiple: true

    - name: Publish package to PyPI
      if: ${{ github.event.release.prerelease == false }}
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_TOKEN }}

    - name: Publish package to TestPyPI
      if: ${{ github.event.release.prerelease == true }}
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.TEST_PYPI_TOKEN }}
        repository-url: https://test.pypi.org/legacy/
